---
import { Picture } from 'astro:assets'

interface Props {
    title: string
    body?: string
    href: string
    imageSrc?: any // or ImageMetadata | undefined
    imageAlt?: string
    badge?: string
    transitionName?: string
    onClick?: (e: MouseEvent) => void
    lines?: number
}

const {
    href,
    title,
    body,
    imageSrc,
    imageAlt,
    badge,
    lines = 2,
    transitionName,
    onClick,
} = Astro.props
---

<li class="cs-card">
    <a
        href={href}
        data-astro-prefetch
        onclick={onClick && `(e => { ${onClick.toString()}(e) })(event)`}
        transition:name={`card-${transitionName}`}
    >
        {
            imageSrc && (
                <div class="cs-card-image-container">
                    <Picture
                        class="cs-card-img"
                        src={imageSrc}
                        formats={['webp', 'avif']}
                        alt={imageAlt || title}
                        width={280}
                        height={158}
                        transition:name={`image-${transitionName}`}
                    />
                </div>
            )
        }
        <div class="cs-card-content">
            {
                badge && (
                    <div class="cs-badge-container">
                        <span class="cs-badge">{badge}</span>
                    </div>
                )
            }
            <div class="cs-title-container">
                <span
                    class="cs-title"
                    transition:name={`title-${transitionName}`}
                >
                    {
                        title
                            .split(' ')
                            .filter((word) => !word.startsWith('#'))
                            .join(' ')
                    }
                    <span>&rarr;</span>
                </span>
                {
                    body && (
                        <p
                            transition:name={`body-${transitionName}`}
                            style={`display: -webkit-box; -webkit-line-clamp: ${lines || 2}; -webkit-box-orient: vertical; overflow: hidden;`}
                        >
                            {body}
                        </p>
                    )
                }
            </div>
        </div>
    </a>

    <style lang="scss">
        .cs-card {
            width: 100%;
            padding: 0;
            margin: 0;
            list-style: none;
            max-width: none;

            a {
                display: grid;
                gap: var(--size-5);
                justify-content: center;
                width: 100%;
                align-items: center;
                padding: var(--size-fluid-2);
                background-position: 100%;
                text-decoration: none;
                border-radius: var(--size-1);
                color: white;
                background-color: var(--surface-10-dark);
                box-shadow: 0 0.125rem 0.25rem 0.125rem var(--surface-5-dark);
                opacity: 0.8;
                transition: var(--ease-in-2);
                transition-property: background-color, box-shadow, opacity;

                @media (--md-n-above) {
                    grid-auto-flow: column;
                    grid-template-columns: auto 1fr;
                }
            }

            .cs-card-image.placeholder {
                position: relative;
                overflow: hidden;
                background: transparent;
                aspect-ratio: 16/9;
                border-radius: var(--size-1);
                box-shadow: 0 0 0.25rem 0.125rem var(--brand-secondary);

                img {
                    position: absolute;
                    inset: 0;
                    width: 100%;
                    height: 100%;
                    object-fit: cover;
                    transform: scale(1.2) rotate(5deg);
                }
            }

            .cs-card-img {
                position: relative;
                box-shadow: 0 0 0.25rem 0.125rem var(--brand-secondary);
                border-radius: var(--size-1);
                background-position: 100%;
                aspect-ratio: 16/9;
                margin-inline-end: auto;
            }

            .cs-badge-container {
                width: fit-content;
                margin-block-end: var(--size-2);
                color: var(--brand-primary);
                font-weight: var(--font-weight-4);
                border-radius: var(--size-2);
                padding: var(--size-1) var(--size-2);
                background-color: var(--surface-8-dark);
                box-shadow: 0 0.125rem 0.25rem 0.125rem var(--surface-9-dark);
            }

            .cs-title {
                margin: 0;
                transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
                line-height: var(--font-line-height-0);
                font-size: var(--font-size-fluid-2);
                font-weight: var(--font-weight-6);
                background: linear-gradient(
                    to right,
                    var(--brand-secondary),
                    var(--brand-primary)
                );
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
            }

            p {
                margin-top: 0.5rem;
                margin-bottom: 0;
                margin-inline-end: auto;
                font-size: var(--font-size-fluid-0);
            }
        }

        li a:is(:hover, :focus-within) {
            box-shadow: 0 0.125rem 0.25rem 0.125rem var(--surface-1-dark);
        }

        .placeholder {
            width: 280px;
            height: 158px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: var(--surface-8-dark);
            border-radius: var(--size-1);

            .placeholder-content {
                color: var(--text-dark);
                font-size: var(--font-size-0);
            }
        }
    </style>
</li>
